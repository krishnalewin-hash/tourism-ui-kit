var QuoteResults=(()=>{(function(){let p="quote-calc",i={googleApiKey:window.CFG&&(window.CFG.GMAPS_KEY||window.CFG.PLACES_API_KEY)||"",bands:[{maxMi:10,pricePP:30},{maxMi:20,pricePP:40},{maxMi:40,pricePP:55},{maxMi:999,pricePP:70}],minPricePP:30,defaultPassengers:1,remote:{keywords:["tryall","round hill","dublin castle","anchovy","greenwood","bluefields","sheffield","orange bay","rhodes hall"],surchargePP:5},map:{zoom:9}},I=["pickup_location","dropoff_location","pickup_date","pickup_time","passengers","first_name","last_name","email","phone"],b=new URLSearchParams(location.search),t=e=>{let s=b.get(e);if(s&&String(s).trim())return s;try{return sessionStorage.getItem("lead:"+e)||""}catch{return""}return window.LEAD_DATA&&window.LEAD_DATA[e]?window.LEAD_DATA[e]:""},v=e=>String(e||"").replace(/[<>&"']/g,s=>({"<":"&lt;",">":"&gt;","&":"&amp;",'"':"&quot;","'":"&#39;"})[s]),k=e=>(e||0).toFixed(1)+" miles",M=e=>Math.round((e||0)/60)+" minutes";function _(e){for(let s of i.bands)if(e<s.maxMi)return s.pricePP;return i.bands[i.bands.length-1].pricePP}function y(e,s){let o=(e+" "+s).toLowerCase();for(let a of i.remote.keywords)if(o.includes(a))return i.remote.surchargePP;return 0}function L(e){let{pickup:s,dropoff:o,miles:a,seconds:r,pp:c,total:l,pax:d}=e;return`
      <div class="qc-row">
        <div>
          <div id="qc-map" class="qc-map qc-shimmer" aria-label="Route map"></div>
        </div>

        <div class="qc-details">
          <div class="qc-detail-item">
            <span class="qc-detail-label">From:</span>
            <span class="qc-detail-value">${v(s)}</span>
          </div>
          <div class="qc-detail-item">
            <span class="qc-detail-label">To:</span>
            <span class="qc-detail-value">${v(o)}</span>
          </div>
          <div class="qc-detail-item">
            <span class="qc-detail-label">Distance:</span>
            <span class="qc-detail-value">${k(a)}</span>
          </div>
          <div class="qc-detail-item">
            <span class="qc-detail-label">Est. Duration:</span>
            <span class="qc-detail-value">${M(r)}</span>
          </div>
          <div class="qc-detail-item">
            <span class="qc-detail-label">Number of Passengers:</span>
            <span class="qc-detail-value">${d||i.defaultPassengers}</span>
          </div>
          <div class="qc-detail-item">
            <span class="qc-detail-label">Cost per person:</span>
            <span class="qc-detail-value">$${c}</span>
          </div>
          <div class="qc-detail-item">
            <span class="qc-detail-label">Total Cost:</span>
            <span class="qc-detail-value highlight">$${l}</span>
          </div>
          
          <div class="qc-buttons">
            <button class="qc-btn qc-btn-primary" onclick="handlePayNow()">Pay Now</button>
            <button class="qc-btn qc-btn-secondary" onclick="handleContactUs()">Contact Us</button>
          </div>
        </div>
      </div>
    `}function C(){return`
      <div class="qc-row">
        <div class="qc-shimmer" style="height:400px;border-radius:12px;"></div>
        <div class="qc-shimmer" style="height:400px;border-radius:12px;"></div>
      </div>
    `}function D(e){if(window.google&&google.maps&&google.maps.DirectionsService)return e();let s=i.googleApiKey;if(!s){console.error("[quote-calc] Missing Google Maps API key"),e("no-key");return}if(document.querySelector("script[data-qc-gmaps]")){let a=()=>window.google?.maps?.DirectionsService?e():setTimeout(a,100);a();return}let o=document.createElement("script");o.src=`https://maps.googleapis.com/maps/api/js?key=${s}&libraries=places`,o.setAttribute("data-qc-gmaps","1"),o.onload=()=>e(),o.onerror=()=>{console.error("[quote-calc] Failed to load Google Maps"),e("load-error")},document.head.appendChild(o)}function q(){let e=document.getElementById(p);if(!e){console.warn(`[quote-calc] No element #${p} found`);return}let s=t("pickup_location"),o=t("dropoff_location");if(!s||!o){e.innerHTML='<div class="qc-error">Missing pickup or dropoff location</div>';return}e.innerHTML=C(),D(a=>{if(a){e.innerHTML=`<div class="qc-error">Could not load Google Maps: ${a}</div>`;return}new google.maps.DirectionsService().route({origin:s,destination:o,travelMode:google.maps.TravelMode.DRIVING},(c,l)=>{if(l!=="OK"){e.innerHTML=`<div class="qc-error">Couldn't calculate the route right now. Please try again.</div>`,console.error("[quote-calc] Directions failed:",l);return}let d=c.routes[0].legs[0],n=(d.distance?.value||0)/1609.344,u=d.duration?.value||0,f=t("passengers"),P=f&&parseInt(f)>0?parseInt(f):i.defaultPassengers,$=_(n),A=y(s,o),h=Math.max(i.minPricePP,$+A),T=Math.round(h*P),g=document.createElement("div");g.id=p,g.innerHTML=L({pickup:s,dropoff:o,miles:Math.round(n*10)/10,seconds:u,pax:P,pp:h,total:T}),e.replaceWith(g);let w=document.getElementById("qc-map"),x=new google.maps.Map(w,{zoom:i.map.zoom||9});new google.maps.DirectionsRenderer({map:x}).setDirections(c),w.classList.remove("qc-shimmer")})})}document.readyState==="loading"?document.addEventListener("DOMContentLoaded",q):q(),window.handlePayNow=function(){let e=t("pickup_location"),s=t("dropoff_location"),o=t("pickup_date"),a=t("pickup_time"),r=t("passengers")||i.defaultPassengers,c=t("first_name"),l=t("last_name"),d=t("email"),m=t("phone"),n=new URLSearchParams;e&&n.set("pickup_location",e),s&&n.set("dropoff_location",s),o&&n.set("pickup_date",o),a&&n.set("pickup_time",a),r&&n.set("passengers",r),c&&n.set("first_name",c),l&&n.set("last_name",l),d&&n.set("email",d),m&&n.set("phone",m);let u=`https://tourdriver.com/book?${n.toString()}`;window.location.href=u},window.handleContactUs=function(){let e=t("pickup_location"),s=t("dropoff_location"),o=t("passengers")||i.defaultPassengers,a=`Hi! I'd like to book a transfer from ${e} to ${s} for ${o} passenger(s). Please contact me with more details.`,r=`https://wa.me/1876XXXXXXX?text=${encodeURIComponent(a)}`,c=`mailto:bookings@tourdriver.com?subject=Transfer Booking Request&body=${encodeURIComponent(a)}`;window.open(r,"_blank")}})();})();
/*!
 * Quote Calc Enhanced (Distance → Price) — results page widget with default total
 * - Always shows total price (defaults to 1 passenger if none specified)
 * - Reads lead params (URL first, then sessionStorage fallback)
 * - Loads Google Maps JS (if not already present)
 * - Draws route map (DirectionsService/Renderer)
 * - Calculates price from distance bands + remote surcharge + minimum
 *
 * Mount:   <div id="quote-calc"></div>
 * Depends: window.CFG.GMAPS_KEY (or a <script> with Maps already loaded)
 */
